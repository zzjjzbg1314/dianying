<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gaofen.dianying.persistents.mapper.TDbMovieMapper">
  <resultMap id="BaseResultMap" type="com.gaofen.dianying.persistents.entity.TDbMovie">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="db_id" jdbcType="INTEGER" property="db_id" />
    <result column="db_score" jdbcType="VARCHAR" property="db_score" />
    <result column="db_stars" jdbcType="INTEGER" property="db_stars" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="countries" jdbcType="VARCHAR" property="countries" />
    <result column="genres" jdbcType="VARCHAR" property="genres" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="director" jdbcType="VARCHAR" property="director" />
    <result column="starring" jdbcType="VARCHAR" property="starring" />
    <result column="film_review" jdbcType="VARCHAR" property="film_review" />
    <result column="like_num" jdbcType="INTEGER" property="like_num" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="flag" jdbcType="TINYINT" property="flag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gaofen.dianying.persistents.entity.TDbMovieWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, db_id, db_score, db_stars, year, images, title, countries, genres, type, director, 
    starring, film_review, like_num, status, flag, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    summary
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_db_movie
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_db_movie
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieKey" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_db_movie
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_db_movie
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_db_movie
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieWithBLOBs" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_db_movie (db_id, db_score, db_stars, 
      year, images, title, 
      countries, genres, type, 
      director, starring, film_review, 
      like_num, status, flag, 
      create_time, update_time, summary
      )
    values (#{db_id,jdbcType=INTEGER}, #{db_score,jdbcType=VARCHAR}, #{db_stars,jdbcType=INTEGER}, 
      #{year,jdbcType=INTEGER}, #{images,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{countries,jdbcType=VARCHAR}, #{genres,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{director,jdbcType=VARCHAR}, #{starring,jdbcType=VARCHAR}, #{film_review,jdbcType=VARCHAR}, 
      #{like_num,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{flag,jdbcType=TINYINT}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{summary,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieWithBLOBs" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_db_movie
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="db_id != null">
        db_id,
      </if>
      <if test="db_score != null">
        db_score,
      </if>
      <if test="db_stars != null">
        db_stars,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="countries != null">
        countries,
      </if>
      <if test="genres != null">
        genres,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="starring != null">
        starring,
      </if>
      <if test="film_review != null">
        film_review,
      </if>
      <if test="like_num != null">
        like_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="summary != null">
        summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="db_id != null">
        #{db_id,jdbcType=INTEGER},
      </if>
      <if test="db_score != null">
        #{db_score,jdbcType=VARCHAR},
      </if>
      <if test="db_stars != null">
        #{db_stars,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="countries != null">
        #{countries,jdbcType=VARCHAR},
      </if>
      <if test="genres != null">
        #{genres,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="director != null">
        #{director,jdbcType=VARCHAR},
      </if>
      <if test="starring != null">
        #{starring,jdbcType=VARCHAR},
      </if>
      <if test="film_review != null">
        #{film_review,jdbcType=VARCHAR},
      </if>
      <if test="like_num != null">
        #{like_num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_db_movie
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_db_movie
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.db_id != null">
        db_id = #{record.db_id,jdbcType=INTEGER},
      </if>
      <if test="record.db_score != null">
        db_score = #{record.db_score,jdbcType=VARCHAR},
      </if>
      <if test="record.db_stars != null">
        db_stars = #{record.db_stars,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.images != null">
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.countries != null">
        countries = #{record.countries,jdbcType=VARCHAR},
      </if>
      <if test="record.genres != null">
        genres = #{record.genres,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.director != null">
        director = #{record.director,jdbcType=VARCHAR},
      </if>
      <if test="record.starring != null">
        starring = #{record.starring,jdbcType=VARCHAR},
      </if>
      <if test="record.film_review != null">
        film_review = #{record.film_review,jdbcType=VARCHAR},
      </if>
      <if test="record.like_num != null">
        like_num = #{record.like_num,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=TINYINT},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_db_movie
    set id = #{record.id,jdbcType=INTEGER},
      db_id = #{record.db_id,jdbcType=INTEGER},
      db_score = #{record.db_score,jdbcType=VARCHAR},
      db_stars = #{record.db_stars,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      images = #{record.images,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      countries = #{record.countries,jdbcType=VARCHAR},
      genres = #{record.genres,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      director = #{record.director,jdbcType=VARCHAR},
      starring = #{record.starring,jdbcType=VARCHAR},
      film_review = #{record.film_review,jdbcType=VARCHAR},
      like_num = #{record.like_num,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      flag = #{record.flag,jdbcType=TINYINT},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      summary = #{record.summary,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_db_movie
    set id = #{record.id,jdbcType=INTEGER},
      db_id = #{record.db_id,jdbcType=INTEGER},
      db_score = #{record.db_score,jdbcType=VARCHAR},
      db_stars = #{record.db_stars,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      images = #{record.images,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      countries = #{record.countries,jdbcType=VARCHAR},
      genres = #{record.genres,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      director = #{record.director,jdbcType=VARCHAR},
      starring = #{record.starring,jdbcType=VARCHAR},
      film_review = #{record.film_review,jdbcType=VARCHAR},
      like_num = #{record.like_num,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      flag = #{record.flag,jdbcType=TINYINT},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_db_movie
    <set>
      <if test="db_id != null">
        db_id = #{db_id,jdbcType=INTEGER},
      </if>
      <if test="db_score != null">
        db_score = #{db_score,jdbcType=VARCHAR},
      </if>
      <if test="db_stars != null">
        db_stars = #{db_stars,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="countries != null">
        countries = #{countries,jdbcType=VARCHAR},
      </if>
      <if test="genres != null">
        genres = #{genres,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="director != null">
        director = #{director,jdbcType=VARCHAR},
      </if>
      <if test="starring != null">
        starring = #{starring,jdbcType=VARCHAR},
      </if>
      <if test="film_review != null">
        film_review = #{film_review,jdbcType=VARCHAR},
      </if>
      <if test="like_num != null">
        like_num = #{like_num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=TINYINT},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gaofen.dianying.persistents.entity.TDbMovieWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_db_movie
    set db_id = #{db_id,jdbcType=INTEGER},
      db_score = #{db_score,jdbcType=VARCHAR},
      db_stars = #{db_stars,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      images = #{images,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      countries = #{countries,jdbcType=VARCHAR},
      genres = #{genres,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      director = #{director,jdbcType=VARCHAR},
      starring = #{starring,jdbcType=VARCHAR},
      film_review = #{film_review,jdbcType=VARCHAR},
      like_num = #{like_num,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      flag = #{flag,jdbcType=TINYINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      summary = #{summary,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gaofen.dianying.persistents.entity.TDbMovie">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_db_movie
    set db_id = #{db_id,jdbcType=INTEGER},
      db_score = #{db_score,jdbcType=VARCHAR},
      db_stars = #{db_stars,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      images = #{images,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      countries = #{countries,jdbcType=VARCHAR},
      genres = #{genres,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      director = #{director,jdbcType=VARCHAR},
      starring = #{starring,jdbcType=VARCHAR},
      film_review = #{film_review,jdbcType=VARCHAR},
      like_num = #{like_num,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      flag = #{flag,jdbcType=TINYINT},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>